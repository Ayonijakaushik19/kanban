[{"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\index.js":"1","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\App.js":"2","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\addItem.jsx":"3","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\header.jsx":"4","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\board.jsx":"5","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\column.jsx":"6","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\card.jsx":"7","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\userSignup.jsx":"8","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\Home.jsx":"9","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\userSignin.jsx":"10","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\headerNavbar.jsx":"11"},{"size":232,"mtime":1613155007411,"results":"12","hashOfConfig":"13"},{"size":868,"mtime":1616518229296,"results":"14","hashOfConfig":"13"},{"size":2351,"mtime":1616518229312,"results":"15","hashOfConfig":"13"},{"size":526,"mtime":1613155007409,"results":"16","hashOfConfig":"13"},{"size":3952,"mtime":1616571085584,"results":"17","hashOfConfig":"13"},{"size":1907,"mtime":1616518229340,"results":"18","hashOfConfig":"13"},{"size":4665,"mtime":1616518229338,"results":"19","hashOfConfig":"13"},{"size":4020,"mtime":1616518239104,"results":"20","hashOfConfig":"13"},{"size":216,"mtime":1616518229296,"results":"21","hashOfConfig":"13"},{"size":3348,"mtime":1616758860529,"results":"22","hashOfConfig":"13"},{"size":878,"mtime":1616518229341,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"4r7iq8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\index.js",[],["51","52"],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\App.js",[],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\addItem.jsx",[],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\header.jsx",[],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\board.jsx",["53","54"],"import React, { useState, useEffect } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AddItem from \"./addItem\";\r\nimport axios from 'axios';\r\n\r\n// components\r\nimport Column from \"./column\";\r\n\r\nimport styles from \"./board.module.css\";\r\n\r\nfunction Board() {\r\n  \r\n  const [notStartedList, setNotStartedList] = useState([\r\n    { id: uuidv4(), content: \"This is a draggable card\" },\r\n    { id: uuidv4(), content: \"This is another draggable card\" },\r\n    { id: uuidv4(), content: \"Guess what? This is a draggable too!\" },\r\n  ]);\r\n\r\n  const [columns, setColumns] = useState({\r\n    [uuidv4()]: {\r\n      name: \"Not Started\",\r\n      items: notStartedList,\r\n    },\r\n    [uuidv4()]: {\r\n      name: \"In Progress\",\r\n      items: [],\r\n    },\r\n    [uuidv4()]: {\r\n      name: \"In Review\",\r\n      items: [],\r\n    },\r\n    [uuidv4()]: {\r\n      name: \"Completed\",\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addItem = (updatedItemListFromChild, updatedColumnFromChild) => {\r\n    setNotStartedList(updatedItemListFromChild);\r\n    setColumns(updatedColumnFromChild);\r\n  };\r\n\r\n  const setEditedBoard = (columnKey,editedList) => {\r\n   const newEditedColumns = {\r\n    ...columns,\r\n    [Object.keys(columns).filter(\r\n      (key) => key === columnKey\r\n    )]: {\r\n      name: columns[Object.keys(columns).filter(\r\n        (key) => key === columnKey\r\n      )].name,\r\n      items: editedList\r\n    }\r\n\r\n  }\r\nconsole.log(\"Edited Column: \",newEditedColumns,\"column\",columns);\r\n  setColumns(newEditedColumns);\r\n}\r\n\r\nconst deleteFunction = (updatedList,colId) => {\r\n  const newEditedColumns = {\r\n    ...columns,\r\n    [Object.keys(columns).filter(\r\n      (key) => key === colId\r\n    )]: {\r\n      name: columns[Object.keys(columns).filter(\r\n        (key) => key === colId\r\n      )].name,\r\n      items: updatedList\r\n    }\r\n\r\n  }\r\n  setColumns(newEditedColumns);\r\n\r\n}\r\n  return (\r\n    <>\r\n      <DragDropContext\r\n        onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n      >\r\n        <div className={styles.board}>\r\n          {Object.entries(columns).map(([columnId, col], index) => (\r\n            <Column\r\n              key={columnId}\r\n              id={columnId}\r\n              title={col.name}\r\n              list={col.items}\r\n              setEditedBoard= {setEditedBoard}\r\n              deleteFunction = {deleteFunction}\r\n            />\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n      <AddItem\r\n        addItem={addItem}\r\n        initialList={\r\n          columns[\r\n            Object.keys(columns).filter(\r\n              (key) => columns[key].name === \"Not Started\"\r\n            )\r\n          ].items\r\n        }\r\n        columns={columns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Board;\r\n","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\column.jsx",["55","56","57","58"],"import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\n// components\r\nimport Card from './card';\r\n\r\nimport styles from './column.module.css';\r\n\r\nfunction Column({ id, title, list,setEditedBoard,deleteFunction }) {\r\n    const setEdited = (editedItem,columnKey) => {\r\n        var index;\r\n         list.findIndex(function (entry, i) { \r\n            if (entry.id == editedItem.id) { \r\n                index = i; \r\n                return true; \r\n            } \r\n        }); \r\n    var editedList = list;\r\n    editedList[index] = editedItem;\r\n   setEditedBoard(columnKey,editedList)\r\n    \r\n}\r\n\r\nconst delFunc = (itemId,columnId) => {\r\n    // console.log(\"Item Id: \",itemId,\"Column Id: \",columnId);\r\n    var index;\r\n    list.findIndex(function (entry, i) { \r\n        if (entry.id == itemId) { \r\n            index = i; \r\n            return true; \r\n        } \r\n    });\r\n    list.splice(index,1);\r\n    deleteFunction(list,columnId);\r\n    \r\n}\r\n\r\n\r\n    return (\r\n        <div className={styles.column}>\r\n            <div className={styles.column__title} style={{ color: title === \"Not Started\" ? 'gray' : title === \"In Progress\" ? 'royalblue' : title === \"In Review\" ? 'orange' : 'limegreen'}}>\r\n                {title}\r\n            </div>\r\n            <Droppable droppableId={id}>\r\n                {(provided, snapshot) => (\r\n                    <div className={styles.column__cardArea}\r\n                        ref={provided.innerRef}\r\n                        style={{ backgroundColor: snapshot.isDraggingOver ? 'rgba(255, 69, 0, 0.1)' : 'white' }}\r\n                        {...provided.droppableProps}>\r\n                            {list.map((item, index) => <Card delFunc={delFunc} setEdited={setEdited} columnCode={id} key={item.id} item={item} index={index} />)}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Column\r\n","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\card.jsx",["59"],"import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport styles from \"./card.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { FormControl } from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     margin: {\r\n//       margin: theme.spacing(1),\r\n//     },\r\n//     extendedIcon: {\r\n//       marginRight: theme.spacing(1),\r\n//     },\r\n//   }));\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n    textAlign: \"center\"\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Card({ item, index,setEdited,columnCode, delFunc }) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [editButtonShow, setEditButtonShow] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editedItem, setEditedItem] = useState(item)\r\n\r\n  const mouseEnter = () => {\r\n    setEditButtonShow(true);\r\n  };\r\n\r\n  const mouseLeave = () => {\r\n    setEditButtonShow(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const editButtonClicked = (e, id) => {\r\n    handleOpen();\r\n  };\r\n\r\n  const deleteButtonClicked = (e, id) => {\r\n    console.log(\"Delete button clicked\")\r\n    delFunc(id,columnCode);\r\n  };\r\n  const handleInput = (e) => {\r\n    setEditedItem({\r\n        id: item.id,\r\n        content: e.target.value\r\n    })\r\n  };\r\n\r\n  const editFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(editedItem);\r\n      setEdited(editedItem,columnCode);\r\n      handleClose();\r\n\r\n\r\n  }\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Edit your task</h2>\r\n     <form onSubmit = {(e) => editFormSubmit(e)}>\r\n     <input\r\n            type=\"text\"\r\n            placeholder={item.content}\r\n            value={editedItem.content}\r\n            onChange={(e) => handleInput(e)}\r\n            style={{\r\n              \"border-radius\": \"10px\",\r\n              \"box-shadow\": \"0 0 5px #d8d8d8\",\r\n              \"margin-top\": \"10px\",\r\n              \"margin-bottom\": \"10px\",\r\n              \"padding\": \"15px\",\r\n              \"background-color\": \"white\",\r\n              \"font-weight\": \"500\",\r\n            }}\r\n          ></input>\r\n          <br />\r\n          <button\r\n            style={{\r\n              padding: \"10px 20px 10px 20px\",\r\n              \"background-color\": \"cadetblue\",\r\n              border: \"none\",\r\n              \"border-radius\": \"10px\",\r\n              color: \"#ffffff\",\r\n            }}\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n\r\n     </form>\r\n\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <>\r\n          <div\r\n            className={styles.card}\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            onMouseEnter={(e) => mouseEnter()}\r\n            onMouseLeave={(e) => mouseLeave()}\r\n          >\r\n            {item.content}\r\n            {editButtonShow ? (\r\n              <>\r\n              <IconButton\r\n                aria-label=\"edit\"\r\n                onClick={(e) => editButtonClicked(e, item.id)}\r\n              >\r\n                <EditIcon fontSize=\"small\" />\r\n              </IconButton>\r\n              <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={(e) => deleteButtonClicked(e, item.id)}\r\n            >\r\n              <DeleteForeverIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            </>\r\n            ) : null}\r\n          </div>\r\n          <Modal\r\n            open={openModal}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            {body}\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\userSignup.jsx",["60"],"import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Header from './headerNavbar';\r\n\r\nclass userSignup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: null,\r\n      password: null,\r\n      passwordConfirmation: null,\r\n      signupError: null,\r\n    };\r\n  }\r\n\r\n  userTyping = (type, e) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        console.log('email');\r\n        this.setState({ email: e.target.value });\r\n        break;\r\n\r\n      case \"password\":\r\n        this.setState({ password: e.target.value });\r\n        break;\r\n\r\n      case \"passwordConfirmation\":\r\n        this.setState({ passwordConfirmation: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  formIsValid = () => {\r\n    return this.state.password === this.state.passwordConfirmation;\r\n  };\r\n\r\n  submitSignup = (e) => {\r\n      e.preventDefault();\r\n      if(!this.formIsValid()){\r\n        this.setState({signupError: 'Passwords do not match'});\r\n        return;\r\n    }\r\n\r\n    axios.post('http://localhost:5000/user/Signup',{\r\n      email:  this.state.email,\r\n      password: this.state.password\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n     alert(res.data.message);\r\n    \r\n    }).catch((err) => {\r\n      console.log(err);\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Header />\r\n          \r\n                  <Card style={{ width: \"40vw\", marginLeft: \"auto\", marginRight: \"auto\", marginTop:'4vh'}}>\r\n          <Card.Header\r\n            style={{\r\n              backgroundColor: \"#6c6c6c\",\r\n              color: \"orange\",\r\n              fontFamily: '\"Merriweather\", serif',\r\n              fontSize: \"1.5rem\",\r\n              textAlign: \"center\"\r\n            }}\r\n            as=\"h5\"\r\n          >\r\n            Signup\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={(e) => this.submitSignup(e)}>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicEmail\"\r\n                onChange={(e) => this.userTyping('email',e)}\r\n              >\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                style={{ textAlign: \"left\" }}\r\n                controlId=\"formBasicPassword\"\r\n                onChange={(e) => this.userTyping('password',e)}\r\n              >\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n              </Form.Group>\r\n              <Form.Group\r\n                style={{ textAlign: \"left\", marginBottom:'1.6vh' }}\r\n                controlId=\"formBasicPassword\"\r\n                onChange={(e) => this.userTyping('passwordConfirmation',e)}\r\n              >\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Re-enter Password\" />\r\n              </Form.Group>\r\n                <Form.Group style={{textAlign: 'left',fontSize:'1.5vh'}}>\r\n                <Link to=\"/Signin\"><a>Already have an account? Sign in</a></Link>\r\n                </Form.Group>\r\n              \r\n\r\n              {\r\n                    this.state.signupError ? \r\n                    <Form.Text style={{paddingBottom: '0.6vh'}} className=\"text-danger\">\r\n                    {this.state.signupError}\r\n                  </Form.Text>\r\n                    :\r\n                    null\r\n                }\r\n                <div style={{textAlign: \"center\"}}>\r\n              <Button variant=\"secondary\" type=\"submit\">\r\n                Register\r\n              </Button>\r\n              </div>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default userSignup;\r\n","D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\Home.jsx",[],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\userSignin.jsx",["61"],"D:\\study\\others\\Cross_Woc\\project_kanban\\kanban\\src\\components\\headerNavbar.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"70","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},{"ruleId":"71","severity":1,"message":"72","line":12,"column":25,"nodeType":"73","messageId":"74","endLine":12,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":13,"column":26,"nodeType":"77","messageId":"78","endLine":13,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":27,"column":20,"nodeType":"73","messageId":"74","endLine":27,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":28,"column":22,"nodeType":"77","messageId":"78","endLine":28,"endColumn":24},{"ruleId":"66","severity":1,"message":"79","line":8,"column":10,"nodeType":"68","messageId":"69","endLine":8,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":109,"column":36,"nodeType":"82","endLine":109,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":90,"column":36,"nodeType":"82","endLine":90,"endColumn":39},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FormControl' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]